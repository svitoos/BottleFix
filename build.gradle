buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.mod.version
group = config.mod.group
archivesBaseName = config.mod.archivesBaseName

ext.simpleVersion = version
version = "mc${config.minecraft.version}-${project.version}"

minecraft {
    version = config.minecraft.version + "-" + config.forge.version
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.minecraft.mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace "@MODNAME@", config.mod.name
    replace "@MODID@", config.mod.id
    replace "@MODVERSION@", project.simpleVersion
    replace "/*@MCVERSIONDEP@*/", ", acceptedMinecraftVersions = \"${config.mod.acceptedMinecraftVersions}\""
}

repositories {
    mavenCentral()
}

dependencies {
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.simpleVersion
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        /* replace version and mcversion */
        expand "version": project.simpleVersion, "mcversion": project.minecraft.version,
        /* replace modid and modname*/
        "modid": config.mod.id, "name": config.mod.name,
        /* replace description */
        "description": config.mod.description
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    // Move access transformer to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
   manifest {
       attributes 'FMLAT': "${config.mod.id}_at.cfg"
   }
}
